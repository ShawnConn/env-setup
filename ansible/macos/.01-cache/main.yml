---
- name: Pre-cache Hombrew and other installs
  hosts: all

  vars_files:
    - ../../../default.config.yml

  pre_tasks: []

  roles: []

  tasks:
    - name: Retrieve Homebrew cache dir
      set_fact:
        homebrew_cache: "{{ lookup('pipe', 'brew --cache') }}"
      tags: ["cache"]

  - name: Create RubyGems cache directory
    ansible.builtin.file:
      path: "{{ downloads }}/gem"
      state: directory
      mode: '0755'
    tags: ["cache"]

  - name: Create NPM cache directory
    ansible.builtin.file:
      path: "{{ downloads }}/npm"
      state: directory
      mode: '0755'
    tags: ["cache"]

  - name: Create Pip cache directory
    ansible.builtin.file:
      path: "{{ downloads }}/pip"
      state: directory
      mode: '0755'
    tags: ["cache"]

    - name: Cache Homebrew packages to {{ homebrew_cache }}
      command: brew fetch "{{ item }}"
      loop: "{{ envsetup_homebrew_installed_packages }}"
      ignore_errors: yes
      tags: ["cache"]

    - name: Cache Homebrew casks to {{ homebrew_cache }}
      command: brew fetch --cask "{{ packages[item] }}"
      loop: "{{ envsetup_homebrew_cask_apps }}"
      ignore_errors: true
      tags: ["cache"]

  - name: Cache Ruby gems to {{ downloads }}/gem
    ansible.builtin.command:
      cmd: gem fetch "{{ item.name }}"
      chdir: "{{ downloads }}/gem"
    loop: "{{ gem_packages }}"
    ignore_errors: yes
    tags: ["cache", "ruby"]

  - name: Cache NPM packages to {{ downloads }}/npm
    ansible.builtin.command:
      cmd: npm pack "{{ item }}"
      chdir: "{{ downloads }}/npm"
    loop: "{{ npm_packages }}"
    ignore_errors: yes
    tags: ["cache", "npm"]

  - name: Cache Python pip packages to {{ downloads }}/pip
    ansible.builtin.command:
      cmd: pip download "{{ item.name | default(item) }}" -d "{{ downloads }}/pip"
      chdir: "{{ downloads }}/pip"
    loop: "{{ pip_packages }}"
    ignore_errors: yes
    tags: ["cache", "python"]

    # @TODO: Cache for RUST/PHP/GO/RUBY/NODE/PYTHON

  post_tasks: []
